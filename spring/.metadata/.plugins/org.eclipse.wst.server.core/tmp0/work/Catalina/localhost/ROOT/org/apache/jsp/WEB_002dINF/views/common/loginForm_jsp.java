/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-06-20 00:46:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<!-- Tell the browser to be responsive to screen width -->\r\n");
      out.write("<meta\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"\r\n");
      out.write("	name=\"viewport\">\r\n");
      out.write("	\r\n");
      out.write("<!-- Google Font: Source Sans Pro -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback\">\r\n");
      out.write("<!-- Font Awesome Icons -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/fontawesome-free/css/all.min.css\">\r\n");
      out.write("<!-- Theme style -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/dist/css/adminlte.min.css\">\r\n");
      out.write("<!-- icheck bootstrap -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/icheck-bootstrap/icheck-bootstrap.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("body.login-page{\r\n");
      out.write("	background-image:url('");
      out.print(request.getContextPath());
      out.write("/resources/images/intro.jpg');\r\n");
      out.write("	background-position:center;\r\n");
      out.write("	background-size:cover;\r\n");
      out.write("	background-repeat:no-repeat;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"hold-transition login-page\">\r\n");
      out.write("	<div class=\"login-box\">\r\n");
      out.write("		<div class=\"login-logo\">\r\n");
      out.write("			<a href=\"#\"><b>관리자 로그인</b></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- /.login-logo -->\r\n");
      out.write("		<div class=\"card\">\r\n");
      out.write("		 <div class=\"card-body login-card-body\">\r\n");
      out.write("			<p class=\"login-box-msg\">Sign in to start your session</p>\r\n");
      out.write("\r\n");
      out.write("			<form action=\"");
      out.print(request.getContextPath() );
      out.write("/common/login.do\" method=\"post\">\r\n");
      out.write("				<div class=\"form-group has-feedback\">\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" name=\"id\" placeholder=\"아이디를 입력하세요.\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pastID }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("					<span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"form-group has-feedback\">\r\n");
      out.write("					<input type=\"password\" class=\"form-control\" name=\"pwd\" placeholder=\"패스워드를 입력하세요.\"  value=\"mimi\">\r\n");
      out.write("					<span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-sm-8\">\r\n");
      out.write("						<div class=\"checkbox icheck\">\r\n");
      out.write("							<label> <input type=\"checkbox\" name=\"rememberMe\" value=\"check\"> Remember Me\r\n");
      out.write("							</label>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.col -->\r\n");
      out.write("					<div class=\"col-sm-4\">\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-primary btn-block btn-flat\">로그인</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.col -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("			<a href=\"#\" style=\"font-weight:bold;\">아이디/패스워드 찾기</a><br> \r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- /.login-box-body -->\r\n");
      out.write("	  </div>	\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- /.login-box -->\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap 4 -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<!-- AdminLTE App -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/dist/js/adminlte.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	var message=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	if(message!=\"\"){\r\n");
      out.write("		alert(message);\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("	");
 session.removeAttribute("msg"); 
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
