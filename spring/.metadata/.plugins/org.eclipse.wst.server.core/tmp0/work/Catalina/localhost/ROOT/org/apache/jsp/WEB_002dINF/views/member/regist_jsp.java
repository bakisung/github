/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-06-20 06:22:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class regist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/member/regist_js.jsp", Long.valueOf(1687228215482L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("	\r\n");
      out.write("	<section class=\"content register-page\">\r\n");
      out.write("		<div class=\"register-box\">\r\n");
      out.write("			<!-- 콘텐츠 헤더 -->\r\n");
      out.write("			<div class=\"login-logo\">\r\n");
      out.write("				<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/registForm.do\"><b>회원 등록</b></a>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<!-- 콘텐츠 -->\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<div class=\"register-card-body\">\r\n");
      out.write("					<form role=\"form\" class=\"form-horizontal\" action=\"regist.do\" method=\"post\">\r\n");
      out.write("						<input type=\"hidden\" name=\"picture\">\r\n");
      out.write("						<!-- 프로필 사진 선택 부분 -->\r\n");
      out.write("						<div class=\"input-group mb-3\">\r\n");
      out.write("							<div class=\"mailbox-attachments clearfix\" style=\"text-align: center;\">\r\n");
      out.write("								<div class=\"mailbox-attachment-icon has-img\" id=\"pictureView\" style=\"border: 1px solid green; height: 200px; width: 140px; margin: 0 auto;\"></div>\r\n");
      out.write("								<div class=\"mailbox-attachment-info\">\r\n");
      out.write("									<div class=\"input-group input-group-sm\">\r\n");
      out.write("										<label for=\"inputFile\" class=\"btn btn-warning btn-sm btn-flat input-group-addon\">파일선택</label>\r\n");
      out.write("										<input id=\"inputFileName\" class=\"form-control\" type=\"text\" disabled>\r\n");
      out.write("										<span class=\"input-group-append-sm\">\r\n");
      out.write("											<button type=\"button\" class=\"btn btn-info btn-sm btn-append\" onclick=\"upload_go();\">업로드</button>\r\n");
      out.write("										</span>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<br>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"id\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">\r\n");
      out.write("								<span style=\"color: red; font-weight:bold;\">*</span>아이디\r\n");
      out.write("							</label>\r\n");
      out.write("							<div class=\"col-sm-9 input-group input-group-sm\">\r\n");
      out.write("								<input name=\"id\" type=\"text\" id=\"id\" class=\"form-control\" placeholder=\"13자 영문자, 숫자 조합\"\r\n");
      out.write("									onkeyup=\"this.value=this.value.replace(/[\\ㄱ-ㅎㅏ-ㅣ가-힣]/g, &#39;&#39;)\">\r\n");
      out.write("								<span class=\"input-group-append-sm\">\r\n");
      out.write("									<button type=\"button\" class=\"btn btn-info btn-sm btn-append\" onclick=\"idCheck_go();\">중복확인</button>\r\n");
      out.write("								</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"pwd\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">\r\n");
      out.write("								<span style=\"color: red; font-weight:bold;\">*</span>패스워드\r\n");
      out.write("							</label>\r\n");
      out.write("							<div class=\"col-sm-9 input-group-sm\">\r\n");
      out.write("								<input name=\"pwd\" type=\"password\" id=\"pwd\" class=\"form-control\" placeholder=\"20자 영문,숫자,특수문자 조합\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"name\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">\r\n");
      out.write("								<span style=\"color: red; font-weight:bold;\">*</span>이 름 \r\n");
      out.write("							</label>\r\n");
      out.write("							<div class=\"col-sm-9 input-group-sm\">\r\n");
      out.write("								<input name=\"name\" type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"이름을 입력하세요\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"authority\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">권 한</label>\r\n");
      out.write("							<div class=\"col-sm-9 input-group-sm\">\r\n");
      out.write("								<select name=\"authority\" class=\"form-control\" style=\"font-size: 0.9em;\">\r\n");
      out.write("									<option value=\"ROLE_USER\">사용자</option>\r\n");
      out.write("									<option value=\"ROLE_MANAGER\">운영자</option>\r\n");
      out.write("									<option value=\"ROLE_ADMIN\">관리자</option>\r\n");
      out.write("								</select>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"email\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">이메일</label>\r\n");
      out.write("							<div class=\"col-sm-9 input-group-sm\">\r\n");
      out.write("								<input name=\"email\" type=\"text\" id=\"email\" class=\"form-control\" placeholder=\"example@naver.com\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group row\">\r\n");
      out.write("							<label for=\"phone\" class=\"col-sm-3\" style=\"font-size: 0.9em;\">전화번호</label>\r\n");
      out.write("							<div class=\"col-sm-9\">\r\n");
      out.write("								<div class=\"input-group-sm\">\r\n");
      out.write("									<input style=\"width: 30%;\" name=\"phone\" type=\"text\" id=\"phone\" class=\"form-control float-left\">\r\n");
      out.write("									<label class=\"float-left\" style=\"padding: 0; text-align: center;\">&nbsp;-&nbsp;</label>\r\n");
      out.write("									<input style=\"width: 30%;\" name=\"phone\" type=\"text\" class=\"form-control float-left\">\r\n");
      out.write("									<label class=\"float-left\" style=\"padding: 0; text-align: center;\">&nbsp;-&nbsp;</label>\r\n");
      out.write("									<input style=\"width: 30%;\" name=\"phone\" type=\"text\" class=\"form-control float-left\">\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"card-footer\">\r\n");
      out.write("							<div class=\"row\">\r\n");
      out.write("								<div class=\"col-sm-6\">\r\n");
      out.write("									<button type=\"button\" id=\"registBtn\" class=\"btn btn-info\" onclick=\"submit_go();\">가입하기</button>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"col-sm-6\">\r\n");
      out.write("									<button type=\"button\" id=\"cancelBtn\" class=\"btn btn-danger float-right\" onclick=\"CloseWindow();\">&nbsp;&nbsp;&nbsp;취&nbsp;&nbsp;소&nbsp;&nbsp;&nbsp;</button>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form role=\"imageForm\" action=\"upload/picture.do\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("	<input type=\"file\" id=\"inputFile\" style=\"display: none;\" name=\"pictureFile\" class=\"form-control\" onchange=\"imageChange_go();\">\r\n");
      out.write("	<input type=\"hidden\" value=\"\" id=\"oldFile\" name=\"oldPicture\">\r\n");
      out.write("	<input type=\"hidden\" name=\"checkUpload\" value=\"0\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	// 사진이 변경됐을 때\r\n");
      out.write("	function imageChange_go(){\r\n");
      out.write("		$('input[name=\"checkUpload\"]').val(0);\r\n");
      out.write("		preViewPicture($('input#inputFile')[0], $('div#pictureView'));\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	// 업로드 버튼을 눌렀을 때\r\n");
      out.write("	function upload_go(){\r\n");
      out.write("		if($('#inputFile').val() == \"\"){\r\n");
      out.write("			alert(\"이미지를 선택하세요.\");\r\n");
      out.write("			$('#inputFile').click();\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		// form 태그 양식을 객체화\r\n");
      out.write("		// [0] 을 붙여주지 않으면 모든 데이터를 다 가져오는거라 form 에 있는 데이터만 가져오려면 [0]을 꼭 붙여줘야한다.\r\n");
      out.write("		let form = new FormData($('form[role=\"imageForm\"]')[0]);\r\n");
      out.write("		console.log(form);\r\n");
      out.write("		// 서버와 통신\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"");
      out.print(request.getContextPath());
      out.write("/member/picture.do\",\r\n");
      out.write("			data : form,\r\n");
      out.write("			type : \"post\",\r\n");
      out.write("			processData : false,\r\n");
      out.write("			contentType : false,\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				// 업로드 확인 변수 셋팅\r\n");
      out.write("				$('input[name=\"checkUpload\"]').val(1);\r\n");
      out.write("\r\n");
      out.write("				// 저장된 파일명 저장\r\n");
      out.write("				$('input#oldFile').val(data);	// 이미지 변경시 이것과 비교해서 다르다면 삭제될 파일명(전 파일)\r\n");
      out.write("				$('form[role=\"form\"] input[name=\"picture\"]').val(data);\r\n");
      out.write("				\r\n");
      out.write("				alert(\"이미지가 업로드 되었습니다.\");\r\n");
      out.write("			},\r\n");
      out.write("			error : function(error){\r\n");
      out.write("				console.log(error);\r\n");
      out.write("				alert(\"현재 이미지 업로드가 불가합니다. \\n관리자에게 연락 바랍니다.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	// 아이디 중복확인으로 확인된 아이디가 저장될 곳\r\n");
      out.write("	let checkedID = \"\";\r\n");
      out.write("	\r\n");
      out.write("	function idCheck_go(){\r\n");
      out.write("		let input_ID = $('#id');\r\n");
      out.write("		\r\n");
      out.write("		if(input_ID.val() == \"\"){\r\n");
      out.write("			alert(\"아이디를 입력하세요.\");\r\n");
      out.write("			input_ID.focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}else{\r\n");
      out.write("			// 아이디는 4~13 글자의 영문자와 숫자로만 입력\r\n");
      out.write("			let reqID = /^[a-z]{1}[a-zA-Z0-9]{3,12}$/;\r\n");
      out.write("			if(!reqID.test(input_ID.val())){\r\n");
      out.write("				alert(\"아이디는 첫 글자는 영소문자이며, \\n4~13자리의 영문자와 숫자로만 입력해야 합니다.\");\r\n");
      out.write("				input_ID.focus();\r\n");
      out.write("				return;\r\n");
      out.write("			};\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		// 중복확인\r\n");
      out.write("		let data = {id : input_ID.val().trim()};\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : \"");
      out.print(request.getContextPath());
      out.write("/member/idCheck.do\",\r\n");
      out.write("			data : data,\r\n");
      out.write("			type : 'post',\r\n");
      out.write("			success : function(result){\r\n");
      out.write("				if(result){	// 빈 스트링은 false 처리 됨\r\n");
      out.write("					alert(\"사용가능한 아이디 입니다.\");\r\n");
      out.write("					checkedID = result;\r\n");
      out.write("					$('input[name=\"id\"]').val(checkedID);\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"중복된 아이디 입니다.\");\r\n");
      out.write("					input_ID.focus();\r\n");
      out.write("				};\r\n");
      out.write("			},\r\n");
      out.write("			error : function(error){\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	function submit_go(){\r\n");
      out.write("		let uploadCheck = $('input[name=\"checkUpload\"]').val();\r\n");
      out.write("		\r\n");
      out.write("		if(!(uploadCheck > 0)){\r\n");
      out.write("			alert(\"이미지 업로드는 필수입니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		if($('input[name=\"id\"]').val() == \"\"){\r\n");
      out.write("			alert(\"아이디는 필수 입니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		if($('input[name=\"id\"]').val() != checkedID){\r\n");
      out.write("			alert(\"아이디 중복확인이 필요합니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		if($('input[name=\"pwd\"]').val() == \"\"){\r\n");
      out.write("			alert(\"패스워드는 필수입니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		if($('input[name=\"name\"]').val() == \"\"){\r\n");
      out.write("			alert(\"이름은 필수입니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		$('form[role=\"form\"]').submit();\r\n");
      out.write("			\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
